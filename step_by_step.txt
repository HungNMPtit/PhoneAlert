Bước 1: Xác định yêu cầu & thiết lập mục tiêu
	- Mục tiêu: Mô hình phát hiện xem một người có đang sử dụng điện thoại hay không trong các ngữ cảnh khác nhau.
	- Định nghĩa các nhãn: Hai nhãn chính là "có sử dụng điện thoại" và "không sử dụng điện thoại".
		+ YES (Có dùng điện thoại): 
			1. (Y1) Cầm điện thoại và tương tác trực tiếp
			2. (Y2) Gọi điện và cầm điện thoại gần tai
			3. (Y3) Chụp ảnh hoặc quay video
			4. (Y4) Sử dụng điện thoại khi đang lái xe: xe máy, đạp, ô tô
			5. (Y5) Dùng điện thoại để điều khiển các thiết bị khác (Điều hòa, TV, ...)
			6. (Y6) Sử dụng điện thoại trong các tư thế nằm/ngồi
			7. (Y7) Sử dụng điện thoại để thanh toán: Quét QR	
				=> Tối thiểu 700 (7 x 100)

		+ No (Không dùng điện thoại):
			1. (N1) Điện thoại ở gần nhưng không sử dụng: để trên bàn, ghế xe, trên kệ, trong túi, ...
			2. (N2) Cầm nhưng không sử dụng: đặt vào túi, nói chuyện với người khác, đưa điện thoại cho người khác, hoạt động khác, ...
			3. (N3) Các thiết bị giống nhưng không phải điện thoại: điều khiển, đồng hồ thông minh, máy đo sức khỏe
				=> Tối thiểu 550 ảnh
			4. (N4) Ảnh không liên quan:
				- Cảnh thiên nhiên
				- Văn phòng/nhà ở
				- Đồ vật
				- Đường phố
				- Động/thực vật
				
	=> Cân bằng dữ liệu thì cần 150 ảnh không liên quan để đưa vào tập "NO".


Bước 2: Thu thập Dữ liệu
	- Trong ảnh có thể có nhiều chủ thể
	- Có sẵn: Kaggle, Google Dataset Search, github, ...
		+ Một số từ khóa: 	Driver Behavior, 
							Human Activity Recognition, 
							Phone usage dataset,
							Human phone interaction, 
							Driver distraction datasetH
							Human activity with smartphone.

	- Tự thu thập: Tìm trên google, cắt ra từ video, ... 		
	- Gán nhãn cho dữ liệu: 
		+ Gán nhãn thủ công 
		+ Công cụ: LabelImg/RectLabel để vẽ bounding box
	- Thực tế: 
	- Gán nhãn bằng Folder.
	
Bước 3: Chuẩn bị Dữ liệu (Data Preprocessing)
	- Xử lý hình ảnh: 
		+ Đưa về cùng kích thước. 
		+ Tăng tính đa dạng: Xoay, lật, cắt, tăng độ sáng, bão hòa, tương phản, thêm nhiễu 
			=> 7 ảnh mới
			=> Tự động hóa tăng cường ảnh thông qua thư viện:Albumentations, imgaug, hoặc Keras: ImageDataGenerator 
	- Phân chia dữ liệu: train, test, validation : 80, 10, 10.
	
Bước 4: Xây dựng và thiết kế mô hình
	Có hai cách tiếp cận bài toán (Sẽ cố gắng thực hiện cả hai trường hợp): 
	1. Thuần CNN: Đầu vào ảnh đã xử lý, đầu ra là quyết định yes/no.
	2. Tích hợp nhiều mô hình (model2.txt)

Bước 5: Huấn luyện Mô hình (Training)

Bước 6: Đánh giá Mô hình (Evaluation)
	- Kiểm tra trên tập kiểm thử: Sau khi huấn luyện, kiểm tra mô hình trên tập kiểm thử chưa từng thấy để đánh giá hiệu quả thực sự.
	- Các chỉ số đánh giá: Precision, Recall, F1-Score, và mAP.
	- Kiểm tra các trường hợp mà mô hình dễ nhầm lẫn => điều chỉnh
	
Bước 7: Tối ưu hóa và Điều chỉnh Mô hình
	- Ensembling: Nếu có thể, kết hợp kết quả từ nhiều mô hìn (như YOLO và Faster R-CNN).
	- Attention Mechanism: vùng tay và mặt của người để mô hình có thể tập trung vào các vùng quan trọng.
	
Bước 8: Triển khai và Sử dụng Mô hình (Deployment)

Bước 9: Theo dõi và Bảo trì Mô hình sau Triển khai